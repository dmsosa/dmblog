datasource: h2
server:
  port: 8082
api:
  security:
    token:
      secret: ${JWT_SECRET:secret}
      issuer: ${JWT_ISSUER:myessen}

#Spring config
spring:
  application:
    name: blog-service
  profiles:
    active: dev
# Import .env file as if it were a .properties file
  config:
    import: optional:classpath:.env[.properties]
#H2 database, in memory
  datasource:
    url: jdbc:h2:mem:demo
    username: sa
    password: password
    driverClassName: org.h2.Driver
  h2:
    console:
      enabled: true
  jpa:
    properties:
      hibernate:
        format_sql: true
#OAuth2Clients
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: user
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
#JavaMailSender
mail:
  username: ${MAIL_USERNAME}
  password: ${MAIL_PASSWORD}
#Cloudinary for storing large images
cloudinaryUrl: ${CLOUDINARY_URL}
logging:
  level:
    org.hibernate.sql: TRACE
    org.springframework.security: TRACE


---
#for dev profile, we use a postgres database
datasource: postgres
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${PG_URL}
    username: ${PG_USER}
    password: ${PG_PASSWORD}
    driverClassName: org.postgresql.Driver
  h2:
    console:
      enabled: false
